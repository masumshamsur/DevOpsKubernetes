apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.postgresDB.appName }}
spec:
  replicas: {{ .Values.postgresDB.replica }}
  selector:
    matchLabels:
      app: postgres-pod
  template:   # for pod definition
    metadata:
      labels:
        app: postgres-pod
    spec:
      containers:
      - name: database
        image: {{ .Values.postgresDB.image }}
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_USER
            #value: "postgres"
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: username
          - name: POSTGRES_PASSWORD
            #value: "postgres" 
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: password   
          - name: POSTGRES_HOST_AUTH_METHOD
            #value: trust
            valueFrom:
              configMapKeyRef:
                name : postgres-configmap
                key: authMethod
        volumeMounts:
          - name: postgres-persistent-storage
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-persistent-storage
          # pointer to the configuration of HOW we want the mount to be implemented
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: postgres-pod
  ports:
  - port: 5432
    targetPort: 5432
